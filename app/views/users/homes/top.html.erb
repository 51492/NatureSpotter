<div class="d-flex flex-column flex-sm-row">
  <div class="mx-2 pt-1">
    <h3 class="ch">スポット検索</h3>
  </div>

  <div class="tag_list mx-2 py-2">
    <input id="address" type="textbox" placeholder="気になる場所を検索！">
    <input type="button" value="検索" onclick="codeAddress()">
  </div>
</div>

<hr class="mt-0 mb-2">
<!--<div id="display">緯度経度が表示される、、、、！</div>-->

<div data-turbolinks="false", id='map'></div>

<style>
  #map {
    height: 700px;
    width: 100%;
  }

  #map img {
    max-width: 100%;
    height: auto;
  }
</style>

<script>
  let map
  let geocoder

  const display = document.getElementById('display')

  function initMap(){
    geocoder = new google.maps.Geocoder()

    // 地図生成
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 35.6764225, lng:139.650027},
      zoom: 12,
      mapTypeControlOptions: {
        mapTypeIds: [google.maps.MapTypeId.ROADMAP, myMapTypeId]
      }
    });

    // 地図に各投稿に紐づくマーカーを表示
    var posts = gon.post; // JSON文字列を配列に変換
    posts.forEach(function(post) {
      var marker = new google.maps.Marker({
        position: {lat: post.post_latitude, lng: post.post_longitude},
        map: map,

        // アイコンを用意した画像に変更
        icon: {
          url: "<%= asset_path('mapicon.png') %>",
          size: new google.maps.Size(30, 35), // 画像の初期サイズを指定
          scaledSize: new google.maps.Size(30, 35) // 画像の表示サイズを指定
        },
      });

      marker.addListener('click', function() {
        window.location.href = "/posts/" + post.id;
      });
    });

    // スタイルの設定
    const myMapType = new google.maps.StyledMapType([
      {
        stylers: [
          {visibility: "simplified"},
        ],
      },

      {
        featureType: "water",
        elementType: "geometry.fill",
        stylers: [
          {hue: "#003bff"},
          {color: "#8ecdf0"},
        ],
      },

      {
        featureType: 'road.highway',
        stylers: [
          {visibility: "off"},
        ],
      },

      {
        featureType: "landscape",
        stylers: [
          {color: "#dbe8e5"},
        ],
      },

      {
        featureType: "poi.park",
        stylers: [
          {color: "#e6e6e6"},
        ],
      },

      {
        featureType: "transit.line",
        stylers: [
          {visibility: "off"},
        ],
      },

    ],
      {
        name: 'ラベルなし',
    });

    var myMapTypeId = 'my_style';

    // 地図にスタイルを追加
    map.mapTypes.set(myMapTypeId, myMapType);
    map.setMapTypeId(myMapTypeId);
  }



    //検索フォームのボタンが押された時に実行される
  function codeAddress(){
    //検索フォームの入力内容を取得
    let inputAddress = document.getElementById('address').value;

    geocoder.geocode( { 'address': inputAddress}, function(results, status) {
      //該当する検索結果がヒットした時に、地図の中心を検索結果の緯度経度に更新する
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            icon: {
              url: "<%= asset_path('mapicon.png') %>",
              size: new google.maps.Size(30, 35), // 画像の初期サイズを指定（適宜変更してください）
              scaledSize: new google.maps.Size(30, 35) // 画像の表示サイズを指定（適宜変更してください）
            },
        });
        // display.textContent = "検索結果：" + results[ 0 ].geometry.location
        }

        else {
        //検索結果が何もなかった場合に表示
        alert('該当する結果がありませんでした：' + status);
      }
    });

    marker.addListener('click', function() {
      window.location.href = "リンク先のURL";
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GMAP_API"] %>&callback=initMap" async defer></script>

<!--以下参考-->
  <!--【Google Maps API】地図デザインの変更と「Styling Wizard」の使い方-->
    <!--https://www.granfairs.com/blog/staff/google-maps-api-04-->

  <!--スタイルマップを使用して地図の雰囲気を変えてみる-->
    <!--https://maps.multisoup.co.jp/blog/249/-->